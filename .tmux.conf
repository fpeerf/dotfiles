################################################################################
# General
################################################################################

# utf-8 on
# set -gq utf8 on        # Tmux < 2.2
# set -gq status-utf8 on # Tmux < 2.2

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# Increase scrollback buffer size
set -g history-limit 65536

# Use Vi mode
setw -g mode-keys vi

# emacs key bindings in tmux command prompt (prefix + :) are better than vi keys, even for vim users
set -g status-keys emacs

# Allow automatic renaming of windows
set -g allow-rename on

# Renumber windows when one is removed.
set -g renumber-windows on

# Set a terminal that apps will know how to handle
set -g default-terminal "alacritty"
set -ga terminal-overrides ",alacritty:RGB"
# set -g default-terminal "tmux-256color"
# set -g default-command "${SHELL}"
# set -g default-terminal "screen-256color-italic"
# set-option -ga terminal-overrides ",xterm-256color*:Tc:smso"

set -g set-clipboard off

# forward/backward words
# set-window-option -g xterm-keys on

# set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'

# Enable the mouse for scrolling
# set -gq mode-mouse on # Tmux < 2.1
set -g mouse off     # Tmux >= 2.1
# bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
# bind -n WheelDownPane select-pane -t= \; send-keys -M

# Enable mouse for selecting and resizing
# set -gq mouse-select-window on # Tmux < 2.1
# set -gq mouse-select-pane on   # Tmux < 2.1
# set -gq mouse-resize-pane on   # Tmux < 2.1
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Allow tmux to set the titlebar
set -g set-titles on

# Start window and pane numbering from 1 for easier switching
set -g base-index 1
setw -g pane-base-index 1

bind -n S-Enter send-keys Escape "[13;2u"
bind -n C-Enter send-keys Escape "[13;5u"

# How long to display the pane number on PREFIX-q
set -g display-panes-time 3000 # 3s

# How long to wait for repeated keys bound with bind -r
set -g repeat-time 600 # 600ms

# Monitor window activity to display in the status bar
set-window-option -g monitor-activity on

# A bell in another window should cause a bell in the current window
# set -g bell-action any

# Don't show distracting notifications
# set -g visual-bell off
# set -g visual-activity off

# focus events enabled for terminals that support them
# set -g focus-events on

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# don't detach tmux when killing a session
# set -g detach-on-destroy off

################################################################################
# Key Binding
################################################################################

# -r means that the bind can repeat without entering prefix again
# -n means that the bind doesn't use the prefix

# Ensure prefix is Ctrl+B
set -g prefix C-a

# Send prefix to a nested tmux session by doubling the prefix
bind C-a send-prefix

# 'PREFIX r' to reload of the config file
unbind r
bind r source-file ~/.tmux.conf\; display-message '~/.tmux.conf reloaded'

# Allow holding Ctrl when using using prefix+p/n for switching windows
# bind C-p previous-window
# bind C-n next-window

# reenable automatic renaming for the current window
bind M setw automatic-rename on \; display-message "automatic rename enabled"

# Move around panes like in vim
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R
# bind -r C-h select-window -t :-
# bind -r C-l select-window -t :+

#python@3.10 Smart pane switching with awareness of vim splits
# is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
# bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
# bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
# bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# Switch between previous and next windows with repeatable
bind -r n next-window
bind -r p previous-window

# Move the current window to the next window or previous window position
bind -r N run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) + 1)"
bind -r P run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) - 1)"

# Switch between two most recently used windows
bind Space last-window

# use PREFIX+| (or PREFIX+\) to split window horizontally and PREFIX+- or
# (PREFIX+_) to split vertically also use the current pane path to define the
# new pane path
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Change the path for newly created windows
bind c new-window -c "#{pane_current_path}"

# Setup 'v' to begin selection as in Vim
# if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
#     'bind-key -T copy-mode-vi v send-keys -X begin-selection;'
bind Escape copy-mode
# bind -t vi-copy 'v' begin-selection
# bind -t vi-copy 'y' copy-selection
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection
bind-key -Tcopy-mode-vi 'V' send -X rectangle-toggle
bind-key -Tcopy-mode-vi 'Y' send -X copy-end-of-line
# bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -i -selection clipboard"
bind-key -Tcopy-mode-vi 'c' send -X copy-pipe-and-cancel "pbcopy"

bind-key -Tcopy-mode-vi 'h' send -X cursor-left
bind-key -Tcopy-mode-vi 'j' send -X cursor-down
bind-key -Tcopy-mode-vi 'k' send -X cursor-up
bind-key -Tcopy-mode-vi 'l' send -X cursor-right

# unbind p
# bind p paste-buffer

# bind y run -b "tmux show-buffer | xclip -selection clipboard"\; display-message "Copied tmux buffer to system clipboard"

# bind-key -r F new-window t
# bind-key -r D run-shell "t ~/.dotfiles"

################################################################################
# Local overrides
################################################################################

if-shell "[ -f ~/.tmux_local.conf ]" 'source ~/.tmux_local.conf'

################################################################################
# Plugins
################################################################################

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'dracula/tmux'
# available plugins: battery, cpu-usage, git, gpu-usage, ram-usage, network, network-bandwidth, weather, time
set -g @dracula-plugins "git battery time"
set -g @dracula-show-powerline true
set -g @dracula-show-flags true
set -g @dracula-show-timezone false
set -g @dracula-military-time true
set -g @dracula-show-left-icon session
set -g @dracula-day-month true
set -g @dracula-left-icon-padding 0

run -b '~/.tmux/plugins/tpm/tpm'

# source "/usr/local/lib/python3.9/site-packages/powerline/bindings/tmux/powerline.conf"
